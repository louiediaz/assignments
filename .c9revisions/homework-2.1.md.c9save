{"ts":1378479831826,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# Homework 2.1 - Ever wonder what all these signs say?\n\nFor Homework 1.1, you found a nice project on Github, forked it into your own account, and cloned it into your Cloud 9 IDE account. For this assignment, pick one or more PHP files from your project (you DID pick a PHP project, didn't you?) and identify some of the following items of PHP grammar and vocabulary that we talked about in class, including but not limited to:\n\n* Variables: `$name`\n* Constants: `E_USER_WARNING`, `MY_AWESOME_CONSTANT`\n* Arithmetic operators: addition (+), subtraction (-)\n* Functions: `array_slice()`, `do_something_amazing()`\n\nWhen you find one, identify the file and line number in this file, below the instrcutions per the example below. Try to make the indentation match the original file (yes, copy and paste), even if that means there's NO indentation. Crazy PHPers.\n\nYou don't have to identify EVERYTHING in a given line or even in a single file, but you may get extra points if you're thorough or make a survey of more than one file... And you might get docked if you make too much work for me. I at least want to see about 50 lines of code.\n\nWhen you're done editing this file, save it, commit it, and push it to your \"assignments\" repo, called \"origin\". You remember how to push, right?\n\n## Your work should look like this...\n\n`path/to/file.php:3`\n```php\n    if ( MY_AWESOME_CONSTANT )\n    // Constant: MY_AWESOME_CONSTANT\n```\n\n`path/to/file.php:42`\n```php\n    $name = do_something_amazing() + 1;\n    // Variable: $name\n    // Function: do_something_amazing()\n    // Literal: 1 (integer)\n```\n\n## Now get to it!\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1607}]],"length":1607}
{"contributors":[],"silentsave":false,"ts":1379027624225,"patch":[[{"diffs":[[0,"to it!\n\n"],[1,"\nfunction login()\n{\n    if (!empty($_POST)) {\n        $msg = '';\n        $user = read_user($_POST['user_name']);\n        if (isset($user['user_name'])) {\n            if (password_verify($_POST['user_password'], $user['user_password_hash'])) {\n                create_session($user);\n                header('Location: ' . $_SERVER['PHP_SELF']);\n                exit();\n            } else $msg = 'Wrong password';\n        } else $msg = 'User does not exist';\n        $_SESSION['msg'] = $msg;\n    }\n    return login_form();\n}\n\nfunction register()\n{\n    if (!empty($_POST)) {\n        $msg = '';\n        if ($_POST['user_name']) {\n            if ($_POST['user_password_new']) {\n                if ($_POST['user_password_new'] === $_POST['user_password_repeat']) {\n                    if (strlen($_POST['user_password_new']) > 5) {\n                        if (strlen($_POST['user_name']) < 65 && strlen($_POST['user_name']) > 1) {\n                            if (preg_match('/^[a-z\\d]{2,64}$/i', $_POST['user_name'])) {\n                                $user = read_user($_POST['user_name']);\n                                if (!isset($user['user_name'])) {\n                                    if ($_POST['user_email']) {\n                                        if (strlen($_POST['user_email']) < 65) {\n                                            if (filter_var($_POST['user_email'], FILTER_VALIDATE_EMAIL)) {\n                                                create_user();\n                                                $_SESSION['msg'] = 'You are now registered so please login';\n                                                header('Location: ' . $_SERVER['PHP_SELF']);\n                                                exit();\n                                            } else $msg = 'You must provide a valid email address';\n                                        } else $msg = 'Email must be less than 64 characters';\n                                    } else $msg = 'Email cannot be empty';\n                                } else $msg = 'Username already exists';\n                            } else $msg = 'Username must be only a-z, A-Z, 0-9';\n                        } else $msg = 'Username must be between 2 and 64 characters';\n                    } else $msg = 'Password must be at least 6 characters';\n                } else $msg = 'Passwords do not match';\n            } else $msg = 'Empty Password';\n        } else $msg = 'Empty Username';\n        $_SESSION['msg'] = $msg;\n    }\n    return register_form();\n}\n"]],"start1":1599,"start2":1599,"length1":8,"length2":2527}]],"length":4126,"saved":false}
{"ts":1379027954782,"patch":[[{"diffs":[[0,"o it!\n\n\n"],[1,"// Function: "],[0,"function"]],"start1":1600,"start2":1600,"length1":16,"length2":29},{"diffs":[[0,"on login()\n{\n   "],[1," // Function:"],[0," if (!empty($_PO"]],"start1":1627,"start2":1627,"length1":32,"length2":45},{"diffs":[[0,"POST)) {\n       "],[1," // Variable:"],[0," $msg = '';\n    "]],"start1":1670,"start2":1670,"length1":32,"length2":45},{"diffs":[[0," '';\n       "],[1," // Variable:"],[0," $user = rea"]],"start1":1706,"start2":1706,"length1":24,"length2":37},{"diffs":[[0,"']);\n       "],[1," // Function:"],[0," if (isset($"]],"start1":1767,"start2":1767,"length1":24,"length2":37},{"diffs":[[0,"\n           "],[1," // Function:"],[0," if (passwor"]],"start1":1825,"start2":1825,"length1":24,"length2":37},{"diffs":[[0," exist';\n       "],[1," // Variable:"],[0," $_SESSION['msg'"]],"start1":2132,"start2":2132,"length1":32,"length2":45}]],"length":4217,"saved":false}
{"ts":1379027960455,"patch":[[{"diffs":[[0,"\n               "],[1," // Function:"],[0," create_session("]],"start1":1927,"start2":1927,"length1":32,"length2":45},{"diffs":[[0,"\n               "],[1," // Function:"],[0," header('Locatio"]],"start1":1979,"start2":1979,"length1":32,"length2":45}]],"length":4243,"saved":false}
{"ts":1379027963264,"patch":[[{"diffs":[[0,");\n            }"],[1," // Function:"],[0," else $msg = 'Wr"]],"start1":2075,"start2":2075,"length1":32,"length2":45}]],"length":4256,"saved":false}
{"ts":1379027968551,"patch":[[{"diffs":[[0," $msg;\n    }\n   "],[1," // Function:"],[0," return login_fo"]],"start1":2219,"start2":2219,"length1":32,"length2":45}]],"length":4269,"saved":false}
{"ts":1379027973141,"patch":[[{"diffs":[[0,"m();\n}\n\n"],[1,"// Function: "],[0,"function"]],"start1":2265,"start2":2265,"length1":16,"length2":29}]],"length":4282,"saved":false}
{"ts":1379027981386,"patch":[[{"diffs":[[0,"\n       "],[1," // Variable:"],[0," $msg = "]],"start1":2333,"start2":2333,"length1":16,"length2":29}]],"length":4295,"saved":false}
{"ts":1379029501300,"patch":[[{"diffs":[[0,"ion "],[-1,"login()\n{\n    // Function: if (!empty($_POST)) {\n        // Variable: $msg = '';\n        // Variable: $user = read_user($_POST['user_name']);\n        // Function: if (isset($user['user_name'])) {\n            // Function: if (password_verify($_POST['user_password'], $user['user_password_hash'])) {\n                // Function: create_session($user);\n                // Function: header('Location: ' . $_SERVER['PHP_SELF']);\n                exit();\n            } // Function: else $msg = 'Wrong password';\n        } else $msg = 'User does not exist';\n        // Variab"],[1,"db_init($dbconf)\n{\n    extract($dbconf);\n    $dsn = $type === 'mysql'\n        ? 'mysql:host=' . $host . ';port=' . $port . ';dbname=' . $name\n        : 'sqlite:' . $path;\n    try {\n        $db = new PDO($dsn, $user, $pass);\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n        return $db;\n    } catch (PDOException $e) {\n        die('DB Connection fai"],[0,"le"],[1,"d"],[0,": "],[-1,"$_SESSION['msg'] = $msg;\n    }\n    // Function: return login_form();\n}\n\n// Function: "],[1,"' . $e->getMessage());\n    }\n}\n\n"],[0,"func"]],"start1":1626,"start2":1626,"length1":664,"length2":421},{"diffs":[[0,"unction "],[1,"c"],[0,"re"],[-1,"gist"],[1,"ate_us"],[0,"er()\n{\n "]],"start1":2044,"start2":2044,"length1":22,"length2":25},{"diffs":[[0,"    "],[-1,"if (!empty($_POST)) {\n        // Variable: $msg = '';\n        if ($_POST['user_name']) {\n            if ($_POST['user_password_new']) {\n                if ($_POST['user_password_new'] === $_POST['user_password_repeat']) {\n                    if (strlen($_POST['user_password_new']) > 5) {\n                        if (strlen($_POST['user_name']) < 65 && strlen($_POST['user_name']) > 1) {\n                            if (preg_match('/^[a-z\\d]{2,64}$/i', $_POST['user_name'])) {\n                                $user = read_user($_POST['user_name']);\n                                if (!isset($user['user_name'])) {\n                                    if ("],[1,"$q = cfg('db')->prepare(\"\nINSERT INTO users (user_name, user_password_hash, user_email)\nVALUES(:user_name, :user_password_hash, :user_email)\");\n\n    $q->bindValue(\":user_name\", $_POST['user_name']);\n    $q->bindValue(\":user_password_hash\", password_hash($_POST['user_password_new'], PASSWORD_DEFAULT));\n    $q->bindValue(\":user_email\", "],[0,"$_PO"]],"start1":2068,"start2":2068,"length1":663,"length2":344},{"diffs":[[0,"l'])"],[-1," {"],[1,";"],[0,"\n    "],[-1,"                                    if (strlen($_POST['user_email']) < 65) {\n                                            if (filter_var($_POST['user_email'], FILTER_VALIDATE_EMAIL)) {\n                                                create_user();\n                                                $_SESSION['msg'] = 'You are now registered so please login';\n                                                header('Location: ' . $_SERVER['PHP_SELF']);\n                                                exit();\n                                            } else $msg = 'You must provide a valid email address';\n                                        } else $msg = 'Email must be less than 64 characters';\n                                    } else $msg = 'Email cannot be empty';\n                                } else $msg = 'Username already exists';\n                            } else $msg = 'Username must be only a-z, A-Z, 0-9';\n                        } else $msg = 'U"],[1,"if (!$q->execute()) throw new Exception(die($q->errorInfo()));\n    $q->closeCursor();\n}\n\nfunction read_user($user)\n{\n    return cfg('db')->query(\"\nSELECT user_name, user_email, user_password_hash\nFROM users\nWHERE user_name = '$user'\")->fetch(PDO::FETCH_ASSOC);\n}\n\nfunction update_user()\n{\n}\n\nfunction delete_user()\n{\n}\n\nfunction create_session($user)\n{\n    $_SESSION['u"],[0,"ser"],[1,"_"],[0,"name"],[-1," must be between 2 and 64 characters';\n                    } else $msg = 'Password must be at least 6 characters';\n                } else $msg = 'Passwords do not match';\n            } else $msg = 'Empty Password';\n        } else $msg = 'Empty Username'"],[1,"'] = $user['user_name'];\n    $_SESSION['user_email'] = $user['user_email'];\n    $_SESSION['user_logged_in'] = 1"],[0,";\n"],[-1,"    "],[0,"    "]],"start1":2425,"start2":2425,"length1":1250,"length2":504},{"diffs":[[0," = $"],[-1,"msg;\n    }\n    return register_form()"],[1,"user['user_name'] . ' is now logged in'"],[0,";\n}"],[-1,"\n"]],"start1":2945,"start2":2945,"length1":45,"length2":46}]],"length":2991,"saved":false}
{"ts":1379029567623,"patch":[[{"diffs":[[0,");\n    }\n}\n\n"],[1,"// Function(s): db_init, \n// Variable(s):\n// Literals(s): \n\n"],[0,"function cre"]],"start1":2031,"start2":2031,"length1":24,"length2":84}]],"length":3051,"saved":false}
{"ts":1379029759632,"patch":[[{"diffs":[[0,"it, "],[-1,"\n// Variable(s):"],[1,"extract, new PDO, setAttribute, catch, die, getMessage\n// Variable(s): $dsn, $type, $host, $port, $name, $path, $dns, $user, $pass, $db, $e"],[0,"\n// "]],"start1":2064,"start2":2064,"length1":24,"length2":147},{"diffs":[[0,"als(s): "],[1,"none"],[0,"\n\nfuncti"]],"start1":2216,"start2":2216,"length1":16,"length2":20}]],"length":3178,"saved":false}
{"ts":1379030043015,"patch":[[{"diffs":[[0,"ursor();\n}\n\n"],[1,"// Function(s): create_user, cfg, prepare, bindValue, execute, closeCursor, if\n// Variable(s): $q, $_POST, \n// Literals(s): none\n\n"],[0,"function rea"]],"start1":2699,"start2":2699,"length1":24,"length2":154}]],"length":3308,"saved":false}
{"ts":1379030250131,"patch":[[{"diffs":[[0,"_ASSOC);\n}\n\n"],[1,"// Function(s): read_user, return, SELECT, FROM, WHERE, fetch\n// Variable(s): $user\n// Literals(s): none\n\n"],[0,"function upd"]],"start1":3004,"start2":3004,"length1":24,"length2":130},{"diffs":[[0,"d in';\n}"],[1,"\n\n// Function(s): create_session, msg\n// Variable(s): $user, $_SESSION\n// Literals(s): none"]],"start1":3406,"start2":3406,"length1":8,"length2":99}]],"length":3505,"saved":false}
